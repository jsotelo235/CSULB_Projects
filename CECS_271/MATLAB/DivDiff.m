function [FF, p] = DivDiff(xdata, ydata, x)

%%Input:
%%xdata = the x points of the fiven data in vector form
%ydata = the y points of the fiven data in vector form
%x = x value to be interpolated
%%Output:
%p = approximated solution from the divided difference method
%FF = a vector of coefficients that generated by divided difference method

xlen = length(xdata);
F = ydata;

for i = 2:xlen
    F(i:xlen) = (F(i:xlen) - F(i-1))./(xdata(i:xlen) - xdata(i-1));
end

FF = F;

%%Evaluating the polynomial using the coefficients from Div-Diff
m = length(ydata)-1;
p = FF(m+1);
for j = (m:-1:1)
    p = (x-xdata(j)).*p+FF(j);
    %p = (p+FF(j)).*(x-xdata(j));
end

formatSpec = 'The coef. generated by Divided-Difference method: \n';
fprintf(formatSpec);
fprintf('%.4f \t', FF);
fprintf('\n');
evalSpec = 'Evaluation of the polynomial at %.6f yields %.6f';
fprintf(evalSpec,x,p);
fprintf('\n')

hold on
plot(xdata, ydata,'ko', x, p, 'kx')
line(xdata, ydata)
title('Newton Divided Difference')
xlabel('x')
xlim([1,2.5])
ylabel('y')

end

